{"version":3,"sources":["images/heroHome.jpg","images/pugs4life.JPG","images/bamazon.JPG","images/flipClock.JPG","images/giphyFun.JPG","images/liriNodeApp.JPG","images/zombieGame.JPG","components/HeroHolder/index.js","pages/HomePage/index.js","components/PortfolioCard/index.js","components/PortfolioJumbo/index.js","pages/PortfolioPage/index.js","components/HarryPotterTrivia/index.js","components/Calculator/index.js","components/BotGame/index.js","pages/GamePage/index.js","components/Footer/index.js","components/NavBar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","HeroHolder","props","src","alt","style","overlay","className","heading","text","images","Hero","HomePage","React","Component","state","heroImage","render","this","md","icon","size","far","PortfolioCard","top","project","image","hover","waves","href","link","title","description","target","PortfolioJumbo","tag","floating","social","fab","outline","color","PugsI","BamazonI","FlipClockI","GiphyI","LiriI","ZombieI","PortfolioPage","projects","map","id","key","HarryPotterTrivia","question","onClick","checker","value","answers","click","Calculator","numbers","clear","answer","BotGame","door1","doorClick1","door2","doorClick2","door3","doorClick3","start","GamePage","harryPotter","correct","harryPotterGame","currentGame","harryPotterWinsLosses","wins","losses","guessRight","guessWrong","gameOver","calculatorShow","calculator","valueOne","holder","operator","equalChecker","botGameShow","botGame","currentlyPlaying","numClosedDoors","spaceDoorPath","botDoorPath","beachDoorPath","closedDoorPath","guess1","guess2","guess3","win","lose","botShowHandler","doesShow","hpShow","newArr","setState","isBot","door","isClicked","doorCheck1","doorImage","x","newNumClosedDoors","doorCheck2","doorCheck3","console","log","startRound","closed","playing","choreDoor","Math","floor","random","status","calculatorShowHandler","calculate","event","i","f","undefined","newVal","n","parseInt","m","o","sum","h","harryPotterGameHandler","calc","harryPlayHandler","oldArr","length","getRandomInt","q","a","c","splice","newGame","answerChecker","y","loss","newWinsLoss","max","result","harryPotterHolder","gameStatus","calcHolder","botGameHolder","botGameFinal","gRight","gWrong","Footer","fluid","Date","getFullYear","NavBar","constructor","super","collapse","isWideEnough","bind","dark","expand","fixed","isOpen","navbar","left","to","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5a36003f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroHome.7100727b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pugs4life.2dfd6dd9.JPG\";","module.exports = __webpack_public_path__ + \"static/media/bamazon.a97fc808.JPG\";","module.exports = __webpack_public_path__ + \"static/media/flipClock.e22f9053.JPG\";","module.exports = __webpack_public_path__ + \"static/media/giphyFun.2fb72c6f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liriNodeApp.6c95fd47.JPG\";","module.exports = __webpack_public_path__ + \"static/media/zombieGame.074be428.JPG\";","import React from 'react';\r\nimport { MDBMask, MDBView } from 'mdbreact';\r\n\r\nconst HeroHolder = props => {\r\n    const style1 = {\r\n        'width': '80%',\r\n        'margin': '10px auto',\r\n        'fontWeight': 'bold'\r\n    };\r\n    const style2 = {\r\n        'fontWeight': 'bold'\r\n    }\r\n    const style3 = {\r\n        'backgroundColor' : 'blue'\r\n    }\r\n\r\n    return (\r\n    <MDBView src={props.src} alt=\"a showcase of the technologies I am proficient in\" style={style3}>\r\n        <MDBMask overlay=\"black-light\" className=\"flex-center flex-column text-white text-center\">\r\n            <h1 style={style2}>{props.heading}</h1>\r\n            <p style={style1}>{props.text}</p>\r\n        </MDBMask>\r\n    </MDBView>\r\n    )\r\n}\r\n\r\nexport default HeroHolder;","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBIcon } from 'mdbreact';\r\nimport Hero from '../../images/heroHome.jpg';\r\nimport './home.css';\r\nimport HeroHolder from '../../components/HeroHolder';\r\n\r\n\r\nconst images = [{Hero}];\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    state = {\r\n        heroImage: images[0].Hero\r\n    }\r\n\r\n\r\n    render() {\r\n        const secondPara = `Technology has always been a passion for me.  Like most people growing up in the 90's, \r\n        technology was changing at an incredibly fast rate. From dial up to DSL to now fiber, things were getting faster, more connected\r\n        and how we interacted with our world drastically changed.  Star Trek and Star Wars went from being something of imagination to\r\n        something that might be possible.  That is what has led me on this path of being a Developer, to explore the possible.\r\n        `;\r\n\r\n        const heroText = `Welcome to my new and improved website.  Below you will learn a little bit more about me and also see a few strengths\r\n        I have as a developer.  Thanks for taking the time and I hope you enjoy!`\r\n\r\n        return(\r\n            <div>\r\n                <section className='hero my-5'>\r\n                    <HeroHolder src={this.state.heroImage} heading='The Journey of A Coder' text={heroText}>\r\n                     </HeroHolder>\r\n                </section>\r\n                <section className=\"text-center my-5\">\r\n                    <h2 className=\"h1-responsive font-weight-bold my-5\">\r\n                        Who I am as a coder.\r\n                    </h2>\r\n                    <p className=\"lead grey-text w-responsive mx-auto mb-5\">\r\n                        {secondPara}\r\n                    </p>\r\n                    <MDBRow className=\"main-page-four\">\r\n                        <MDBCol md=\"4\">\r\n                            <MDBIcon icon=\"file-code\" size=\"3x\" className=\"red-text\" />\r\n                            <h5 className=\"font-weight-bold my-4\">Front End and UI</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                                The majority of my work so far has been primarily focused on Front End issues with some back end work also. In my pervious role\r\n                                I was one of two developers so we definitely needed to wear multiple hats, but one of our main responsibilities was to work with\r\n                                the creative team and turn sketches into websites. From those experiences my abilities in the design and implementation flourished and\r\n                                I would consider myself proficient in the three big front end languages (HTML, CSS and JavaScript) and the user interface.\r\n                            </p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <MDBIcon icon=\"server\" size=\"3x\" className=\"cyan-text\" />\r\n                            <h5 className=\"font-weight-bold my-4\">API Integrations and Back End</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                                One of the areas of coding that has excited me is linking up data and applications to one another.  I began development\r\n                                on an API integration for the primarily used CRM (FranConnect) and google utilizing google apps. Also being one of two developers I\r\n                                handled quite a few hosting issues that would come up on the various sites that we maintained. The main platforms I have worked\r\n                                with are Dreamhost, Firebase and Heroku but I have had some minimal exposure ot AWS too.\r\n\r\n                                This is the one area I would say I have the most interest in expanding as I move forward in my career. Finding more ways to \r\n                                connect up applications and data and make them look visually appealing and work well for the user.\r\n                            </p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\">\r\n                            <MDBIcon far icon=\"comments\" size=\"3x\" className=\"orange-text\" />\r\n                            <h5 className=\"font-weight-bold my-4\">Project Management</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                                Working for a smaller company has helped me develop more of a Project Manager style way of working.  The flow of the project and \r\n                                what was going to be developed first fell on the developer.  It taught me to manage my time correctly, when it was the right time\r\n                                to communicate issues and what where the necessary requirements needed before any project could truly begin.\r\n                            </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBIcon } from 'mdbreact';\r\nimport './PortfolioCard.css';\r\n\r\nconst PortfolioCard = props => {\r\n  return (\r\n    <MDBCol md=\"4\" className='PortCard'>\r\n        <MDBCard>\r\n          <MDBCardImage\r\n            top\r\n            src={props.project.image}\r\n            overlay='white-slight'\r\n            hover\r\n            waves\r\n            alt='this is a project i worked on'\r\n          />\r\n          <MDBCardBody>\r\n            <a href={props.project.link} className='activator waves-effect waves-light mr-4'>\r\n              <MDBIcon icon='share-alt' className='black-text' />\r\n            </a>\r\n            <MDBCardTitle>{props.project.title}</MDBCardTitle>\r\n            <hr />\r\n            <MDBCardText>\r\n              {props.project.description}\r\n            </MDBCardText>\r\n            <a href={props.project.link} className='black-text d-flex justify-content-end' target='_blank'>\r\n              <h5>\r\n                Click to See More\r\n                <MDBIcon icon='angle-double-right' className='ml-2' />\r\n              </h5>\r\n            </a>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n  )\r\n}\r\n\r\nexport default PortfolioCard;","import React from \"react\";\r\nimport { MDBJumbotron, MDBBtn, MDBRow, MDBCol, MDBIcon, MDBCardBody, MDBCardText,  MDBCardTitle } from \"mdbreact\";\r\n\r\nconst PortfolioJumbo = () => {\r\n  return (\r\n    <MDBRow className=\"mt-5 text-center\">\r\n        <MDBCol>\r\n          <MDBJumbotron>\r\n            <MDBCardBody>\r\n              <MDBCardTitle className=\"h2\">\r\n                A Look At My Projects\r\n              </MDBCardTitle>\r\n              <p className=\"blue-text my-4 font-weight-bold\">\r\n                Here is a showcase of all my projects. For a full look at everything click on the Github link below and for a copy of \r\n                my resume click the download button.\r\n              </p>\r\n              <MDBCardText>\r\n                These are the projects that I wanted to highlight.  I have worked on many applications throughout my time as a developer\r\n                but these in particular have stood out to me as exciting or fun.  I have also worked on at least 30 fully functional sites and\r\n                developed 3 sites from scratch. Those are noted in my resume. Feel free to look and play around with any of the active pages, otherwise\r\n                check out the Fun Games section and have some fun with my creations.\r\n              </MDBCardText>\r\n              <hr className=\"my-4\" />\r\n              <div className=\"pt-2\">\r\n              <MDBBtn size=\"lg\" href=\"https://github.com/baronvontoby\" tag=\"a\" target=\"_blank\" floating social=\"git\">\r\n                <MDBIcon fab icon=\"github\" />\r\n              </MDBBtn>\r\n                <MDBBtn\r\n                  outline\r\n                  color=\"primary\"\r\n                  className=\"waves-effect\"\r\n                  href=\"https://docs.google.com/document/d/1POueIHZouYbasqnA73irXPvntlM36czO2tsCMLqyEyo/edit?usp=sharing\"\r\n                >\r\n                  View Resume<MDBIcon icon=\"download\" />\r\n                </MDBBtn>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBJumbotron>\r\n        </MDBCol>\r\n      </MDBRow>\r\n  )\r\n}\r\n\r\nexport default PortfolioJumbo;","import React from 'react';\r\nimport './portfolio.css';\r\nimport {MDBRow} from 'mdbreact';\r\nimport PortfolioCard from '../../components/PortfolioCard';\r\nimport PortJumbo from '../../components/PortfolioJumbo';\r\n\r\n//Images\r\n\r\nimport PugsI from '../../images/pugs4life.JPG';\r\nimport BamazonI from '../../images/bamazon.JPG';\r\nimport FlipClockI from '../../images/flipClock.JPG';\r\nimport GiphyI from '../../images/giphyFun.JPG';\r\nimport LiriI from '../../images/liriNodeApp.JPG';\r\nimport ZombieI from '../../images/zombieGame.JPG';\r\n\r\nconst images = [{PugsI}, {BamazonI}, {FlipClockI}, {GiphyI}, {LiriI}, {ZombieI}]\r\n\r\n\r\nclass PortfolioPage extends React.Component {\r\n\r\n    state = {\r\n        projects : [\r\n            {\r\n                title: 'Pugs',\r\n                description: 'This react application was an attempt to make a social app that centered around bringing random people together to create meet ups specifically centered around pick up games.  Either board games or sports this app was an attempt to do it all.  It was complete, with User authentication and the ability to make events and join them.',\r\n                image: images[0].PugsI,\r\n                link: 'https://lit-citadel-88830.herokuapp.com/'\r\n            },\r\n            {   \r\n                title: 'Bamazon',\r\n                description : 'This was a node app that I created that created a simple version of the Amazon store. I even took it a step further and created inventory and manager access for a more backend look. Check out the link to the GitHub repository, I was quite proud of this application.',\r\n                image: images[1].BamazonI,\r\n                link: 'https://www.youtube.com/watch?v=BVYfkzHkiDM&feature=youtu.be'\r\n            },\r\n            {\r\n                title: 'Flip Clock',\r\n                description: 'This was a project I worked on while at HotDish Advertising where I made a custom plugin for wordpress to create a flip clock for Hammer and Nails.  I used a combonation of PHP and JavaScript to complete the project.',\r\n                image: images[2].FlipClockI,\r\n                link: 'https://github.com/baronvontoby/LDFlipClock'\r\n            },\r\n            {\r\n                title: 'Liri Node App',\r\n                description: 'This was a node application that was designed and created to search databases for information on your favorite songs, favorite artists and favorite movies.',\r\n                image: images[4].LiriI,\r\n                link: 'https://www.youtube.com/watch?v=KW6I4isnixU&feature=youtu.be'\r\n            },\r\n            {\r\n                title: 'Zombie Node Game',\r\n                description: 'This was another node application that kind of took off on me.  It was a game that allowed you to create a character, select a weapon and fight zombies.  The logic was sound but I will self admit, I made the zombies too hard to kill.',\r\n                image: images[5].ZombieI,\r\n                link: 'https://github.com/baronvontoby/zombiegame'\r\n            },\r\n            {\r\n                title: 'Giphy Fun',\r\n                description: 'This was the first application that I ever made that was pretty decently built.  I have come along way but it is always fun and worth noting the beginning of my career.',\r\n                image: images[3].GiphyI,\r\n                link: 'https://baronvontoby.github.io/giphy-fun/'\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <MDBRow className='TopRow'>\r\n                    <PortJumbo />\r\n                </MDBRow>\r\n                <MDBRow className='CardRow'>\r\n                    {\r\n                        this.state.projects.map((project, id) => (\r\n                            <PortfolioCard project={project} key={id} />\r\n                        ))\r\n                    }\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PortfolioPage;","import React from 'react';\r\nimport {MDBBtn, MDBBtnGroup, MDBRow, MDBCol} from 'mdbreact';\r\nimport './harryPotterTrivia.css';\r\n\r\nconst HarryPotterTrivia = (props) => {\r\n\r\nreturn (\r\n    <MDBRow>\r\n        <MDBCol md='12' className='mb-4 text-center'>\r\n            <h2 className='question-area'>{props.question}</h2>\r\n            <MDBBtnGroup>\r\n                <MDBBtn onClick={props.checker} value={props.answers[0]}>{props.answers[0]}</MDBBtn>\r\n                <MDBBtn onClick={props.checker} value={props.answers[1]}>{props.answers[1]}</MDBBtn>\r\n                <MDBBtn onClick={props.checker} value={props.answers[2]}>{props.answers[2]}</MDBBtn>\r\n                <MDBBtn onClick={props.checker} value={props.answers[3]}>{props.answers[3]}</MDBBtn>\r\n            </MDBBtnGroup>\r\n            <MDBBtn onClick={props.click} >Play</MDBBtn>\r\n        </MDBCol>\r\n    </MDBRow>\r\n    )\r\n}\r\n\r\nexport default HarryPotterTrivia;","import React from 'react';\r\nimport {MDBCol, MDBBtn, MDBBtnGroup, MDBRow} from 'mdbreact';\r\nimport './calculator.css';\r\n\r\nconst Calculator = (props) => {\r\n\r\n    return (\r\n        <MDBRow>\r\n            <MDBCol md='12' className='mb-4'>\r\n                <label className='calc-label'>Awesome Calculator</label>\r\n                <p className='calculator-box'>{props.numbers}</p>        \r\n            </MDBCol>\r\n            <MDBCol md='4' className='mb-4 move-middle'>\r\n                <MDBBtnGroup size='lg'>\r\n                    <MDBBtn onClick={props.click} className='calBtn' color='unique-color' value='1'>1</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='2'>2</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='3'>3</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='+'>+</MDBBtn>\r\n                </MDBBtnGroup>\r\n                <MDBBtnGroup size='lg'>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='4'>4</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='5'>5</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='6'>6</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='-'>-</MDBBtn>\r\n                </MDBBtnGroup>\r\n                <MDBBtnGroup size='lg'>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='7'>7</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='8'>8</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='9'>9</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='*'>*</MDBBtn>\r\n                </MDBBtnGroup>\r\n                <MDBBtnGroup size='lg'>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='/'>/</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='0'>0</MDBBtn>\r\n                    <MDBBtn onClick={props.click} color='unique-color' value='='>=</MDBBtn>\r\n                    <MDBBtn onClick={props.clear} color='unique-color'>Clear</MDBBtn>\r\n                </MDBBtnGroup>\r\n            </MDBCol>\r\n            <MDBCol md='12' className='mb-4'>\r\n                <p>{props.answer}</p>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport { MDBCol, MDBRow, MDBContainer, MDBListGroup, MDBListGroupItem, MDBBtn } from 'mdbreact';\r\nimport './BotGame.css';\r\n\r\nconst BotGame = (props) => {\r\n    return (\r\n        <MDBContainer className='chore-bot-container center-content'>\r\n            <MDBListGroup className='bot-list'>\r\n                <MDBListGroupItem>Hiding behind one of these doors is the ChoreBot.</MDBListGroupItem>\r\n                <MDBListGroupItem>Your mission is to open all of the doors without running into the ChoreBot.</MDBListGroupItem>\r\n                <MDBListGroupItem>If you manage to avoid the ChoreBot until you open the very last door, you win!</MDBListGroupItem>\r\n                <MDBListGroupItem>See if you can score a winning streak!</MDBListGroupItem>\r\n                <MDBListGroupItem>Hit play when you are ready to begin!</MDBListGroupItem>\r\n            </MDBListGroup>\r\n            <MDBRow className='door-row'>\r\n                <MDBCol className='left-door all-door' md='col-4'>\r\n                    <img id='door1' className='bot-img' alt='door' src={props.door1} onClick={props.doorClick1}/>\r\n                </MDBCol>\r\n                <MDBCol className='all-door' md='col-4'>\r\n                    <img id='door2' className='bot-img' alt='door' src={props.door2} onClick={props.doorClick2}/>                  \r\n                </MDBCol>\r\n                <MDBCol className='right-door all-door' md='col-4'>\r\n                    <img id='door3' className='bot-img' alt='door' src={props.door3} onClick={props.doorClick3} />\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <MDBBtn id='start' className='bot-button' color='primary' onClick={props.start} >Play</MDBBtn>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    )\r\n}\r\n\r\nexport default BotGame;","import React from 'react';\r\nimport './game.css';\r\nimport HarryPotterTrivia from '../../components/HarryPotterTrivia';\r\nimport Calculator from '../../components/Calculator';\r\nimport BotGame from '../../components/BotGame';\r\nimport { MDBBtn, MDBBtnGroup, MDBRow, MDBContainer, MDBCol } from 'mdbreact';\r\n\r\n\r\nclass GamePage extends React.Component {\r\n    \r\n    state = {\r\n        harryPotter : [\r\n            { \r\n                question: 'What was Harry\\'s owl name?',\r\n                answers : [ 'Hedwig', 'Crookshanks', 'Padfoot', 'Buckbeak' ],\r\n                correct : 'Hedwig',\r\n                id : 1 \r\n            },\r\n            { \r\n                question: 'When is Harry Potters birthday?',\r\n                answers : [ 'July 12th', 'August 10th', 'May 31st', 'July 31st' ],\r\n                correct : 'July 31st',\r\n                id : 2 \r\n            },\r\n            { \r\n                question: 'What is the tavern called in Hogsmeade?',\r\n                answers : [ 'The Three Broomsticks', 'Knockturn Alley', 'Leaky Cauldron', 'Godrics Hollow' ],\r\n                correct : 'The Three Broomsticks',\r\n                id : 3 \r\n            },\r\n            {\r\n                question: 'Which school did Harry Potter Attend?',\r\n                answers : [ 'Hogwarts', 'Durmstrang', 'Ilvermorny', 'Beauxbatons' ],\r\n                correct : 'Hogwarts',\r\n                id : 4 \r\n            },\r\n            {\r\n                question: 'Who was the headmaster of Hogwarts when the Chamber of Secrets was opened for the first time?',\r\n                answers: [ 'Armando Dippet', 'Albus Dumbledore', 'Phineas Nigellus Black', 'Brutus Scrimgeour'],\r\n                correct: 'Armando Dippet',\r\n                id : 5\r\n            },\r\n            {\r\n                question: 'What was the room called that Harry taught other students in Dumbledores Army?',\r\n                answers: ['The Library', 'Room of Requirement', 'Gryffindor Common Room', 'The Three Broomsticks'],\r\n                correct: 'Room of Requirement',\r\n                id : 6\r\n            },\r\n            {\r\n                question: 'What real world library was used to film some of the library scenes in the Harry Potter movies?',\r\n                answers: ['National Library of Brazil', 'Peckham Library London', 'Trinity College Library Dublin', 'George Peabody Library USA'],\r\n                correct: 'Trinity College Library Dublin',\r\n                id : 7\r\n            }\r\n        ],\r\n        harryPotterGame : false,\r\n        currentGame : [{\r\n            question: '',\r\n            answers: [],\r\n            correct: ''\r\n        }],\r\n        harryPotterWinsLosses : {\r\n            wins : 0,\r\n            losses : 0\r\n        },\r\n        guessRight : null,\r\n        guessWrong : null,\r\n        gameOver : false,\r\n        calculatorShow : false,\r\n        calculator : [{\r\n            valueOne : '',\r\n            holder : '',\r\n            operator : '',\r\n            equalChecker : ''\r\n         }],\r\n         botGameShow: false,\r\n         botGame : [{\r\n             currentlyPlaying : false,\r\n             numClosedDoors : 0,\r\n             door1 : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/closed_door.svg',\r\n             door2 : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/closed_door.svg',\r\n             door3 : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/closed_door.svg',\r\n             spaceDoorPath : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/space.svg',\r\n             botDoorPath : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/robot.svg',\r\n             beachDoorPath : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/beach.svg',\r\n             closedDoorPath : 'https://s3.amazonaws.com/codecademy-content/projects/chore-door/images/closed_door.svg',\r\n             guess1 : '',\r\n             guess2 : '',\r\n             guess3 : '',\r\n             win: false,\r\n             lose: false\r\n         }]\r\n    }\r\n\r\n    //\r\n    // BOT GAME!\r\n    //\r\n\r\n    botShowHandler = () => {\r\n        const doesShow = this.state.botGameShow;\r\n        const hpShow = this.state.harryPotterGame;\r\n        const calculatorShow = this.state.calculatorShow;\r\n        const newArr = [...this.state.botGame];\r\n        newArr[0].win = false;\r\n        newArr[0].lose = false;\r\n        if (hpShow === true ) {\r\n            this.setState({harryPotterGame: !hpShow, botGameShow: !doesShow});\r\n        } else if (calculatorShow === true) {\r\n            this.setState({botGameShow : !doesShow, calculatorShow : !calculatorShow});\r\n        }\r\n        else {\r\n            this.setState({botGameShow: !doesShow, botGame: newArr});\r\n        }\r\n    }\r\n\r\n\r\n\r\n    isBot = door => {\r\n        let botDoorPath = this.state.botGame[0].botDoorPath;\r\n        if ( door === botDoorPath ) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isClicked = door => {\r\n        let closedDoorPath = this.state.botGame[0].closedDoorPath;\r\n        if ( door === closedDoorPath ) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    doorCheck1 = () => {\r\n        const currentlyPlaying = this.state.botGame[0].currentlyPlaying;\r\n        const doorImage = this.state.botGame[0].door1;\r\n        if ( currentlyPlaying && !this.isClicked(doorImage)  ) {\r\n            const newArr = [...this.state.botGame];\r\n            let x = this.state.botGame[0].guess1;\r\n            const numClosedDoors = newArr[0].numClosedDoors;\r\n            let newNumClosedDoors = numClosedDoors - 1;\r\n            newArr[0].numClosedDoors = newNumClosedDoors;\r\n            newArr[0].door1 = x;\r\n            if ( newNumClosedDoors === 0 ) {\r\n                this.gameOver('win');\r\n            } else if ( this.isBot(x) ) {\r\n                this.gameOver();\r\n            } else {\r\n                this.setState({botGame: newArr});\r\n            }\r\n        }\r\n    }\r\n\r\n    doorCheck2 = () => {\r\n        const currentlyPlaying = this.state.botGame[0].currentlyPlaying;\r\n        const doorImage = this.state.botGame[0].door2;\r\n        if ( currentlyPlaying && !this.isClicked(doorImage) ) {\r\n            let x = this.state.botGame[0].guess2;\r\n            const newArr = [...this.state.botGame];\r\n            const numClosedDoors = newArr[0].numClosedDoors;\r\n            let newNumClosedDoors = numClosedDoors - 1;\r\n            newArr[0].numClosedDoors = newNumClosedDoors;\r\n            newArr[0].door2 = x;\r\n            if ( newNumClosedDoors === 0 ) {\r\n                this.gameOver('win');\r\n            } else if ( this.isBot(x) ) {\r\n                this.gameOver();\r\n            } else {\r\n                this.setState({botGame: newArr});\r\n            }\r\n        }\r\n    }\r\n\r\n    doorCheck3 = () => {\r\n        const currentlyPlaying = this.state.botGame[0].currentlyPlaying;\r\n        const doorImage = this.state.botGame[0].door3;\r\n        if ( currentlyPlaying && !this.isClicked(doorImage) ) {\r\n            const newArr = [...this.state.botGame];\r\n            const numClosedDoors = newArr[0].numClosedDoors;\r\n            let newNumClosedDoors = numClosedDoors - 1;\r\n            newArr[0].numClosedDoors = newNumClosedDoors;\r\n            let x = this.state.botGame[0].guess3;\r\n            newArr[0].door3 = x;\r\n            console.log(newArr);\r\n            if ( newNumClosedDoors === 0 ) {\r\n                this.gameOver('win');\r\n            } else if ( this.isBot(x) ) {\r\n                this.gameOver();\r\n            } else {\r\n                this.setState({botGame: newArr});\r\n            }\r\n        }\r\n    }\r\n\r\n    startRound = () => {\r\n        let win = this.state.botGame[0].win;\r\n        let lose = this.state.botGame[0].lose;\r\n        let closed = this.state.botGame[0].numClosedDoors;\r\n        let playing = this.state.botGame[0].currentlyPlaying;\r\n        if( !win && playing ) {\r\n            return\r\n        } else if (!lose && playing) {\r\n            return\r\n        } else if (closed > 0 && playing) {\r\n            return\r\n        } else {\r\n            const newArr = [...this.state.botGame]\r\n            newArr[0].currentlyPlaying = true;\r\n            newArr[0].door1 = newArr[0].closedDoorPath;\r\n            newArr[0].door2 = newArr[0].closedDoorPath;\r\n            newArr[0].door3 = newArr[0].closedDoorPath;\r\n            newArr[0].win = false;\r\n            newArr[0].lose = false;\r\n            let numClosedDoors = 3;\r\n            newArr[0].numClosedDoors = numClosedDoors;\r\n            let choreDoor = Math.floor(Math.random()*numClosedDoors);\r\n            if ( choreDoor === 0 ) {\r\n                newArr[0].guess1 = newArr[0].botDoorPath;\r\n                newArr[0].guess2 = newArr[0].spaceDoorPath;\r\n                newArr[0].guess3 = newArr[0].beachDoorPath;\r\n                this.setState({botGame: newArr})\r\n            } else if ( choreDoor === 1 ) {\r\n                newArr[0].guess2 = newArr[0].botDoorPath;\r\n                newArr[0].guess3 = newArr[0].spaceDoorPath;\r\n                newArr[0].guess1 = newArr[0].beachDoorPath;\r\n                this.setState({botGame: newArr})\r\n            } else {\r\n                newArr[0].guess3 = newArr[0].botDoorPath;\r\n                newArr[0].guess1 = newArr[0].spaceDoorPath;\r\n                newArr[0].guess2 = newArr[0].beachDoorPath;\r\n                this.setState({botGame: newArr})\r\n            }\r\n        }\r\n    }\r\n\r\n    gameOver = status => {\r\n        const newArr = [...this.state.botGame];\r\n        newArr[0].currentlyPlaying = false;\r\n        if ( status === 'win' ) {\r\n            newArr[0].win = true;\r\n            this.setState({botGame: newArr});\r\n        } else {\r\n            newArr[0].lose = true;\r\n            this.setState({botGame: newArr});\r\n        }\r\n    }\r\n\r\n    //\r\n    //\r\n    //\r\n    // Calculator Portion\r\n    //\r\n    //\r\n    //\r\n\r\n    calculatorShowHandler = () => {\r\n        const doesShow = this.state.calculatorShow;\r\n        const hpShow = this.state.harryPotterGame;\r\n        const botGame = this.state.botGameShow;\r\n        const newArr = [...this.state.botGame];\r\n        newArr[0].win = false;\r\n        newArr[0].lose = false;\r\n        if (hpShow === true ) {\r\n            this.setState({harryPotterGame: !hpShow, calculatorShow: !doesShow});\r\n        } else if (botGame === true) {\r\n            this.setState({botGameShow : !botGame, calculatorShow : !doesShow, botGame: newArr});\r\n        }\r\n        else {\r\n            this.setState({calculatorShow: !doesShow});\r\n        }\r\n    }\r\n\r\n   calculate = (event) => {\r\n        let i = event.target.value;\r\n        let f = this.state.calculator[0].equalChecker;\r\n        if (i === undefined || f === '=') {\r\n            return\r\n        } else {\r\n            if ( i === '+' || i === '-' || i === '*' || i === '/') {\r\n                let oldVal = this.state.calculator[0].valueOne;\r\n                let newVal = oldVal;\r\n                let operator = i;\r\n                this.setState({\r\n                    calculator : [{\r\n                        valueOne: '',\r\n                        holder: newVal,\r\n                        operator: operator\r\n                    }]\r\n                });\r\n            } else if ( i === '=') {\r\n                let n = parseInt(this.state.calculator[0].valueOne);\r\n                let m = parseInt(this.state.calculator[0].holder);\r\n                let o = this.state.calculator[0].operator;\r\n                \r\n                if ( o === '+') {\r\n                    let sum = m + n;\r\n                    this.setState({\r\n                        calculator : [{\r\n                            valueOne: sum,\r\n                            equalChecker: i\r\n                        }]\r\n                    });\r\n                } else if ( o === '-' ) {\r\n                    let sum = m - n;\r\n                    this.setState({\r\n                        calculator : [{\r\n                            valueOne: sum,\r\n                            equalChecker: i\r\n                        }]\r\n                    });\r\n                } else if ( o === '*' ) {\r\n                    let sum = m * n;\r\n                    this.setState({\r\n                        calculator : [{\r\n                            valueOne: sum,\r\n                            equalChecker: i\r\n                        }]\r\n                    });\r\n                } else if ( o === '/' ) {\r\n                    let sum = m / n;\r\n                    this.setState({\r\n                        calculator : [{\r\n                            valueOne: sum,\r\n                            equalChecker: i\r\n                        }]\r\n                    });\r\n                } \r\n            } else {\r\n                let oldVal = this.state.calculator[0].valueOne;\r\n                let newVal = oldVal + i;\r\n                let h = this.state.calculator[0].holder;\r\n                let o = this.state.calculator[0].operator;\r\n                this.setState({\r\n                    calculator : [{\r\n                        valueOne: newVal,\r\n                        holder : h,\r\n                        operator : o\r\n                    }]\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    clear = (event) => {\r\n        this.setState({\r\n            calculator : [{\r\n                valueOne : '',\r\n                holder : '',\r\n                operator : '',\r\n                equalChecker: ''\r\n            }]\r\n        })\r\n    }\r\n\r\n    //\r\n    //\r\n    // HARRY POTTER GAME LOGIC\r\n    //\r\n    //\r\n\r\n    harryPotterGameHandler = () => {\r\n        const doesShow = this.state.harryPotterGame;\r\n        const calc = this.state.calculatorShow;\r\n        const botGame = this.state.botGameShow;\r\n        const newArr = [...this.state.botGame];\r\n        newArr[0].win = false;\r\n        newArr[0].lose = false;\r\n        if (calc === true ) {\r\n            this.setState({harryPotterGame: !doesShow, calculatorShow: !calc});\r\n        } else if ( botGame ) {\r\n            this.setState({harryPotterGame: !doesShow, botGameShow : !botGame, botGame : newArr});\r\n        } else {\r\n            this.setState({harryPotterGame: !doesShow});\r\n        }\r\n    }\r\n\r\n\r\n    harryPlayHandler = () => {\r\n        const oldArr = [...this.state.harryPotter];\r\n        let n = this.state.harryPotter.length;\r\n        const doesShow = this.state.harryPotterGame;\r\n        if ( n > 0 ) {\r\n            let x = this.getRandomInt(n);\r\n            let q = this.state.harryPotter[x].question;\r\n            let a = this.state.harryPotter[x].answers;\r\n            let c = this.state.harryPotter[x].correct;\r\n            oldArr.splice(x, 1);\r\n            let newGame = [{ question : q, answers : a, correct : c}]\r\n            this.setState({currentGame: newGame, guessRight: null, guessWrong: null, harryPotter: oldArr});\r\n        }\r\n        else {\r\n            this.setState({gameOver: true, harryPotterGame: !doesShow});\r\n        }\r\n    }\r\n\r\n    getRandomInt(max) {\r\n        return Math.floor(Math.random()* Math.floor(max));\r\n    }\r\n\r\n    answerChecker = (event) => {\r\n        console.log('click')\r\n        let x = this.state.currentGame[0].correct;\r\n        let y = event.target.value;\r\n        let wins = this.state.harryPotterWinsLosses.wins;\r\n        let loss = this.state.harryPotterWinsLosses.losses;\r\n        let newWinsLoss = {wins : 0, losses: 0}\r\n\r\n        if ( x === y ) {\r\n            wins++\r\n            newWinsLoss = { wins: wins, losses: loss}\r\n            this.setState({harryPotterWinsLosses: newWinsLoss, guessRight : true});\r\n        } else {\r\n            loss++\r\n            newWinsLoss = {wins: wins, losses : loss}\r\n            this.setState({harryPotterWinsLosses: newWinsLoss, guessWrong : true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let result = null;\r\n        let harryPotterHolder = null;\r\n        let gameStatus = null;\r\n        let calcHolder = null;\r\n        let botGameHolder = null;\r\n        let botGameFinal = null\r\n\r\n        if (this.state.harryPotterGame) {\r\n            harryPotterHolder = (\r\n                <MDBRow>\r\n                    <MDBCol className='mb-12'>\r\n                        <HarryPotterTrivia\r\n                            question={this.state.currentGame[0].question}\r\n                            correct={this.state.currentGame[0].correct}\r\n                            answers={this.state.currentGame[0].answers}\r\n                            click={this.harryPlayHandler}\r\n                            checker={this.answerChecker}\r\n                            gRight={this.state.guessRight}\r\n                            gWrong={this.state.guessWrong}\r\n                        >\r\n                        </HarryPotterTrivia>\r\n                    </MDBCol>\r\n                    <MDBCol className='mb-12'>\r\n                        <MDBRow>\r\n                            <MDBCol md='12' className='mb-4 text-center'>\r\n                                <h3>Wins and Losses</h3>\r\n                                <p>Wins: {this.state.harryPotterWinsLosses.wins} Losses: {this.state.harryPotterWinsLosses.losses}</p>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n             )\r\n        }\r\n\r\n        if (this.state.guessRight) {\r\n            result = (\r\n                <h4>Congratulations you win! The correct answer is {this.state.currentGame[0].correct}. Hit play and play again!</h4>\r\n            )\r\n        } else if (this.state.guessWrong) {\r\n            result = (\r\n                <h4>That is incorrect. The correct answer is {this.state.currentGame[0].correct}. Please hit play and try again.</h4>\r\n            )\r\n        }\r\n        else if ( !this.state.guessWrong && !this.state.guessRight ) {\r\n            result = null;\r\n        }\r\n\r\n        if (this.state.gameOver) {\r\n            gameStatus = (\r\n                <h4>The Game is over.... come back soon and play again!</h4>\r\n            )\r\n        }\r\n\r\n        if (this.state.calculatorShow) {\r\n            calcHolder = (\r\n                <Calculator\r\n                click={this.calculate}\r\n                clear={this.clear}\r\n                numbers={this.state.calculator[0].valueOne}\r\n                >         \r\n                </Calculator>\r\n            )\r\n        }\r\n\r\n        if (this.state.botGameShow) {\r\n            botGameHolder = (\r\n                <BotGame \r\n                door1={this.state.botGame[0].door1}\r\n                door2={this.state.botGame[0].door2}\r\n                door3={this.state.botGame[0].door3}\r\n                doorClick1={this.doorCheck1}\r\n                doorClick2={this.doorCheck2}\r\n                doorClick3={this.doorCheck3}\r\n                start={this.startRound}\r\n                >\r\n                </BotGame>\r\n            )\r\n        }\r\n\r\n        if (this.state.botGame[0].win) {\r\n            botGameFinal = (\r\n                <MDBRow className='d-flex justify-content-center'>\r\n                    <p>Congrats on the win! Hit play to play again.</p>\r\n                </MDBRow>\r\n            )\r\n        } else if (this.state.botGame[0].lose) {\r\n            botGameFinal = (\r\n                <MDBRow className='d-flex justify-content-center'>\r\n                    <p>At last, you weren't good enough to avoid the Chore BOT!  Your workload will be endless! Hit play to play again.</p>\r\n                </MDBRow>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className='GameMain'>\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md='12' className='mb-4 text-center'>\r\n                            <MDBBtnGroup size='lg' className='btn-group'>\r\n                                <MDBBtn className='hpTriviaBtn' onClick={this.harryPotterGameHandler}>Harry Potter Trivia Game</MDBBtn>\r\n                                <MDBBtn className='hpTriviaBtn' onClick={this.calculatorShowHandler}>Awesome Calculator</MDBBtn>\r\n                                <MDBBtn className='hpTriviaBtn' onClick={this.botShowHandler}>Bot Game</MDBBtn>\r\n                            </MDBBtnGroup>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow className='no-flex'>\r\n                        <MDBCol md='12' className='mb-12 text-center'>\r\n                            {harryPotterHolder}\r\n                            {calcHolder}\r\n                            {botGameHolder}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow className='no-flex'>\r\n                        <MDBCol md='12' className='mb-12 text-center'>\r\n                            {result}\r\n                            {gameStatus}\r\n                            {botGameFinal}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GamePage;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBFooter, MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter color=\"indigo\" className=\"font-small pt-4 mt-4\">\r\n      <MDBContainer fluid className=\"text-center\">\r\n        <MDBRow className='text-center social-icons-row'>\r\n            <MDBBtn size=\"lg\" href=\"https://www.linkedin.com/in/lorenzo-dandrea-41b720157/\" \r\n            tag=\"a\" target=\"_blank\" floating social=\"li\">\r\n                <MDBIcon fab icon=\"linkedin-in\" />\r\n            </MDBBtn>\r\n            <MDBBtn size=\"lg\" href=\"https://github.com/baronvontoby\" tag=\"a\" target=\"_blank\" floating social=\"git\">\r\n                <MDBIcon fab icon=\"github\" />\r\n            </MDBBtn>\r\n            <MDBBtn size=\"lg\" href=\"mailto:lgdandrea4@gmail.com\" tag=\"a\" floating social=\"email\">\r\n                <MDBIcon icon=\"envelope\" />\r\n            </MDBBtn>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"/\">\r\n               lorenzocodes.com </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink } from 'mdbreact';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n            <MDBNavbar color=\"indigo\" dark expand=\"md\" fixed=\"top\">\r\n              <MDBNavbarBrand>\r\n                <strong>Lorenzo Codes</strong>\r\n              </MDBNavbarBrand>\r\n              {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n              <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                <MDBNavbarNav left>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/portfolio\">Portfolio</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/games\">Fun Games</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n            </MDBNavbar>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport PortfolioPage from './pages/PortfolioPage';\nimport GamePage from './pages/GamePage';\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\n\n\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className='Main'>\n          <Router>\n              <NavBar></NavBar>\n            <Switch>\n              <Route exact path='/' component={HomePage}></Route>\n              <Route exact path='/portfolio' component={PortfolioPage}></Route>\n              <Route exact path='/games' component={GamePage}></Route>\n            </Switch>\n        </Router>\n        </div>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}