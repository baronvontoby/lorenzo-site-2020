{"version":3,"sources":["images/heroHome.jpg","components/HeroHolder/index.js","pages/HomePage/index.js","pages/PortfolioPage/index.js","components/HarryPotterTrivia/index.js","pages/GamePage/index.js","pages/ResumePage/index.js","components/Footer/index.js","components/NavBar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","HeroHolder","props","src","alt","style","overlay","className","heading","text","images","Hero","HomePage","React","Component","state","heroImage","render","this","md","icon","size","far","PortfolioPage","HarryPotterTrivia","question","onClick","checker","value","answers","click","GamePage","harryPotter","correct","id","harryPotterGame","currentGame","harryPotterWinsLosses","wins","losses","guessRight","guessWrong","gameOver","harryPotterGameHandler","doesShow","setState","harryPlayHandler","oldArr","n","length","x","getRandomInt","q","a","c","splice","newGame","answerChecker","event","console","log","y","target","loss","newWinsLoss","max","Math","floor","random","result","harryPotterHolder","gameStatus","gRight","gWrong","ResumePage","Footer","color","fluid","href","tag","floating","social","fab","Date","getFullYear","NavBar","constructor","super","collapse","isWideEnough","bind","dark","expand","fixed","isOpen","navbar","left","to","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c91af80c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroHome.7100727b.jpg\";","import React from 'react';\r\nimport { MDBMask, MDBView } from 'mdbreact';\r\n\r\nconst HeroHolder = props => {\r\n    const style1 = {\r\n        'width': '80%',\r\n        'margin': '10px auto',\r\n        'fontWeight': 'bold'\r\n    };\r\n    const style2 = {\r\n        'fontWeight': 'bold'\r\n    }\r\n    const style3 = {\r\n        'backgroundColor' : 'blue'\r\n    }\r\n\r\n    return (\r\n    <MDBView src={props.src} alt=\"a showcase of the technologies I am proficient in\" style={style3}>\r\n        <MDBMask overlay=\"black-light\" className=\"flex-center flex-column text-white text-center\">\r\n            <h1 style={style2}>{props.heading}</h1>\r\n            <p style={style1}>{props.text}</p>\r\n        </MDBMask>\r\n    </MDBView>\r\n    )\r\n}\r\n\r\nexport default HeroHolder;","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBIcon } from 'mdbreact';\r\nimport Hero from '../../images/heroHome.jpg';\r\nimport './home.css';\r\nimport HeroHolder from '../../components/HeroHolder';\r\n\r\n\r\nconst images = [{Hero}];\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    state = {\r\n        heroImage: images[0].Hero\r\n    }\r\n\r\n\r\n    render() {\r\n        const secondPara = `Technology has always been a passion for me.  Like most people growing up in the 90's, \r\n        technology was changing at an incredibly fast rate. From dial up to DSL to now fiber, things were getting faster, more connected\r\n        and how we interacted with our world drastically changed.  Star Trek and Star Wars went from being something of imagination to\r\n        something that might be possible.  That is what has led me on this path of being a Developer, to explore the possible.\r\n        `;\r\n\r\n        const heroText = `Welcome to my new and approved website.  Below you will learn a little bit more about me and my path\r\n        to becoming a programmer.  Thanks for taking the time and I hope you enjoy!`\r\n\r\n        return(\r\n            <div>\r\n                <section className='hero my-5'>\r\n                    <HeroHolder src={this.state.heroImage} heading='The Journey of A Coder' text={heroText}>\r\n                     </HeroHolder>\r\n                </section>\r\n                <section className=\"text-center my-5\">\r\n                    <h2 className=\"h1-responsive font-weight-bold my-5\">\r\n                        Who I am as a coder.\r\n                    </h2>\r\n                    <p className=\"lead grey-text w-responsive mx-auto mb-5\">\r\n                        {secondPara}\r\n                    </p>\r\n                    <MDBRow className=\"main-page-four\">\r\n                    <MDBCol md=\"4\">\r\n                        <MDBIcon icon=\"chart-area\" size=\"3x\" className=\"red-text\" />\r\n                        <h5 className=\"font-weight-bold my-4\">Dashboard Programming</h5>\r\n                        <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                            I am currently developing two projects that manage data.  One is setting up a community connector through\r\n                            Google's Coummunity Connectors app builder to allow data to flow from a 3rd party API to Google Data Studio.\r\n                            My second dashboard project is to combine two API's sets of data and create a custom UI to allow the creating of\r\n                            their own dashboards.  I am using a combination of MDB React and Chart.js to create all the necessary visuals.\r\n                        </p>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"4\">\r\n                        <MDBIcon icon=\"server\" size=\"3x\" className=\"cyan-text\" />\r\n                        <h5 className=\"font-weight-bold my-4\">Websites</h5>\r\n                        <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                            After all I am a web developer.  I have deployed multiple projects utilizing multiple cloud based solutions.\r\n                            Most of my sites are Wordpress and hosted through Dreamhost but I do have a few passion projects that utilize React,\r\n                            like this site does and those are hosted on a mixture of Heroku and AWS. As I continue this journey I hope to develop\r\n                            more dynamic applications that bring people together.\r\n                        </p>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"4\">\r\n                        <MDBIcon far icon=\"comments\" size=\"3x\" className=\"orange-text\" />\r\n                        <h5 className=\"font-weight-bold my-4\">Support</h5>\r\n                        <p className=\"grey-text mb-md-0 mb-5 text-left\">\r\n                            I also wanted to state that I am a people person first.  My journey to the world of development actually started with\r\n                            me in Sales.  People are what drive everything, and being able to communicate well and concisely is extremely important.\r\n                            Now that I am on the operations side, I think it has actually made me a better communicator, especially when it comes to\r\n                            asking for what you need. Details are important but it is also important to let people know why.\r\n                        </p>\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './portfolio.css';\r\n\r\n\r\n\r\nclass PortfolioPage extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PortfolioPage;","import React from 'react';\r\nimport {MDBBtn, MDBBtnGroup, MDBRow, MDBCol} from 'mdbreact';\r\n\r\nconst HarryPotterTrivia = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <MDBRow>\r\n                <MDBCol md='12' className='mb-4 text-center'>\r\n                    <h2>{props.question}</h2>\r\n                    <MDBBtnGroup>\r\n                        <MDBBtn onClick={props.checker} value={props.answers[0]}>{props.answers[0]}</MDBBtn>\r\n                        <MDBBtn onClick={props.checker} value={props.answers[1]}>{props.answers[1]}</MDBBtn>\r\n                        <MDBBtn onClick={props.checker} value={props.answers[2]}>{props.answers[2]}</MDBBtn>\r\n                        <MDBBtn onClick={props.checker} value={props.answers[3]}>{props.answers[3]}</MDBBtn>\r\n                    </MDBBtnGroup>\r\n                    <MDBBtn onClick={props.click} >Play</MDBBtn>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HarryPotterTrivia;","import React from 'react';\r\nimport './game.css';\r\nimport HarryPotterTrivia from '../../components/HarryPotterTrivia';\r\nimport { MDBBtn, MDBBtnGroup, MDBRow, MDBContainer, MDBCol } from 'mdbreact';\r\n\r\n\r\nclass GamePage extends React.Component {\r\n    \r\n    state = {\r\n        harryPotter : [\r\n            { \r\n                question: 'What was Harry\\'s owl name?',\r\n                answers : [ 'Hedwig', 'Crookshanks', 'Padfoot', 'Buckbeak' ],\r\n                correct : 'Hedwig',\r\n                id : 1 \r\n            },\r\n            { \r\n                question: 'When is Harry Potters birthday?',\r\n                answers : [ 'July 12th', 'August 10th', 'May 31st', 'July 31st' ],\r\n                correct : 'July 31st',\r\n                id : 2 \r\n            },\r\n            { \r\n                question: 'What is the tavern called in Hogsmeade?',\r\n                answers : [ 'The Three Broomsticks', 'Knockturn Alley', 'Leaky Cauldron', 'Godrics Hollow' ],\r\n                correct : 'The Three Broomsticks',\r\n                id : 3 \r\n            },\r\n            {\r\n                question: 'Which school did Harry Potter Attend?',\r\n                answers : [ 'Hogwarts', 'Durmstrang', 'Ilvermorny', 'Beauxbatons' ],\r\n                correct : 'Hogwarts',\r\n                id : 4 \r\n            },\r\n            {\r\n                question: 'Who was the headmaster of Hogwarts when the Chamber of Secrets was opened for the first time?',\r\n                answers: [ 'Armando Dippet', 'Albus Dumbledore', 'Phineas Nigellus Black', 'Brutus Scrimgeour'],\r\n                correct: 'Armando Dippet',\r\n                id : 5\r\n            },\r\n            {\r\n                question: 'What was the room called that Harry taught other students in Dumbledores Army?',\r\n                answers: ['The Library', 'Room of Requirement', 'Gryffindor Common Room', 'The Three Broomsticks'],\r\n                correct: 'Room of Requirement',\r\n                id : 6\r\n            },\r\n            {\r\n                question: 'What real world library was used to film some of the library scenes in the Harry Potter movies?',\r\n                answers: ['National Library of Brazil', 'Peckham Library London', 'Trinity College Library Dublin', 'George Peabody Library USA'],\r\n                correct: 'Trinity College Library Dublin',\r\n                id : 7\r\n            }\r\n        ],\r\n        harryPotterGame : false,\r\n        currentGame : [{\r\n            question: '',\r\n            answers: [],\r\n            correct: ''\r\n        }],\r\n        harryPotterWinsLosses : {\r\n            wins : 0,\r\n            losses : 0\r\n        },\r\n        guessRight : null,\r\n        guessWrong : null,\r\n        gameOver : false\r\n    }\r\n    // HARRY POTTER GAME LOGIC//\r\n\r\n    harryPotterGameHandler = () => {\r\n        const doesShow = this.state.harryPotterGame;\r\n        this.setState({harryPotterGame: !doesShow});\r\n    }\r\n\r\n    harryPlayHandler = () => {\r\n        const oldArr = [...this.state.harryPotter];\r\n        let n = this.state.harryPotter.length;\r\n        const doesShow = this.state.harryPotterGame;\r\n        if ( n > 0 ) {\r\n            let x = this.getRandomInt(n);\r\n            let q = this.state.harryPotter[x].question;\r\n            let a = this.state.harryPotter[x].answers;\r\n            let c = this.state.harryPotter[x].correct;\r\n            oldArr.splice(x, 1);\r\n            let newGame = [{ question : q, answers : a, correct : c}]\r\n            this.setState({currentGame: newGame, guessRight: null, guessWrong: null, harryPotter: oldArr});\r\n        }\r\n        else {\r\n            this.setState({gameOver: true, harryPotterGame: !doesShow});\r\n        }\r\n    }\r\n\r\n    getRandomInt(max) {\r\n        return Math.floor(Math.random()* Math.floor(max));\r\n    }\r\n\r\n    answerChecker = (event) => {\r\n        console.log('click')\r\n        let x = this.state.currentGame[0].correct;\r\n        let y = event.target.value;\r\n        let wins = this.state.harryPotterWinsLosses.wins;\r\n        let loss = this.state.harryPotterWinsLosses.losses;\r\n        let newWinsLoss = {wins : 0, losses: 0}\r\n\r\n        if ( x === y ) {\r\n            wins++\r\n            newWinsLoss = { wins: wins, losses: loss}\r\n            this.setState({harryPotterWinsLosses: newWinsLoss, guessRight : true});\r\n        } else {\r\n            loss++\r\n            newWinsLoss = {wins: wins, losses : loss}\r\n            this.setState({harryPotterWinsLosses: newWinsLoss, guessWrong : true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let result = null;\r\n        let harryPotterHolder = null;\r\n        let gameStatus = null;\r\n\r\n        if (this.state.harryPotterGame) {\r\n            harryPotterHolder = (\r\n                <HarryPotterTrivia\r\n                    question={this.state.currentGame[0].question}\r\n                    correct={this.state.currentGame[0].correct}\r\n                    answers={this.state.currentGame[0].answers}\r\n                    click={this.harryPlayHandler}\r\n                    checker={this.answerChecker}\r\n                    gRight={this.state.guessRight}\r\n                    gWrong={this.state.guessWrong}\r\n                ></HarryPotterTrivia>\r\n             )\r\n        }\r\n\r\n        if (this.state.guessRight) {\r\n            result = (\r\n                <h4>Congratulations you win! The correct answer is {this.state.currentGame[0].correct}. Hit play and play again!</h4>\r\n            )\r\n        } else if (this.state.guessWrong) {\r\n            result = (\r\n                <h4>That is incorrect. The correct answer is {this.state.currentGame[0].correct}. Please hit play and try again.</h4>\r\n            )\r\n        }\r\n        else if ( !this.state.guessWrong && !this.state.guessRight ) {\r\n            result = null;\r\n        }\r\n\r\n        if (this.state.gameOver) {\r\n            gameStatus = (\r\n                <h4>The Game is over.... come back soon and play again!</h4>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className='GameMain'>\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md='12' className='mb-4 text-center'>\r\n                            <MDBBtnGroup size='lg'>\r\n                                <MDBBtn className='hpTriviaBtn' onClick={this.harryPotterGameHandler}>Harry Potter Trivia Game</MDBBtn>\r\n                                <MDBBtn className='hpTriviaBtn'>Coming Soon</MDBBtn>\r\n                                <MDBBtn className='hpTriviaBtn'>Coming Soon</MDBBtn>\r\n                            </MDBBtnGroup>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow className='GameDisplay'>\r\n                        <MDBCol md='12' className='mb-4 text-center'>\r\n                            {harryPotterHolder}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol className='mb-4 text-center'>\r\n                            {result}\r\n                            {gameStatus}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol md='12' className='mb-4 text-center'>\r\n                            <h3>Wins and Losses</h3>\r\n                            <p>Wins: {this.state.harryPotterWinsLosses.wins} Losses: {this.state.harryPotterWinsLosses.losses}</p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport './resume.css';\r\n\r\n\r\n\r\nclass ResumePage extends React.Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResumePage;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBFooter, MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter color=\"indigo\" className=\"font-small pt-4 mt-4\">\r\n      <MDBContainer fluid className=\"text-center\">\r\n        <MDBRow className='text-center social-icons-row'>\r\n            <MDBBtn size=\"lg\" href=\"https://www.linkedin.com/in/lorenzo-dandrea-41b720157/\" \r\n            tag=\"a\" target=\"_blank\" floating social=\"li\">\r\n                <MDBIcon fab icon=\"linkedin-in\" />\r\n            </MDBBtn>\r\n            <MDBBtn size=\"lg\" href=\"https://github.com/baronvontoby\" tag=\"a\" target=\"_blank\" floating social=\"git\">\r\n                <MDBIcon fab icon=\"github\" />\r\n            </MDBBtn>\r\n            <MDBBtn size=\"lg\" href=\"mailto:lgdandrea4@gmail.com\" tag=\"a\" floating social=\"email\">\r\n                <MDBIcon icon=\"envelope\" />\r\n            </MDBBtn>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"/\">\r\n               lorenzocodes.com </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink } from 'mdbreact';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n            <MDBNavbar color=\"indigo\" dark expand=\"md\" fixed=\"top\">\r\n              <MDBNavbarBrand>\r\n                <strong>Lorenzo Codes</strong>\r\n              </MDBNavbarBrand>\r\n              {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n              <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                <MDBNavbarNav left>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/portfolio\">Portfolio</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/resume\">Resume</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/games\">Fun Games</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n            </MDBNavbar>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport PortfolioPage from './pages/PortfolioPage';\nimport GamePage from './pages/GamePage';\nimport ResumePage from './pages/ResumePage';\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\n\n\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className='Main'>\n          <Router>\n              <NavBar></NavBar>\n            <Switch>\n              <Route exact path='/' component={HomePage}></Route>\n              <Route exact path='/portfolio' component={PortfolioPage}></Route>\n              <Route exact path='/games' component={GamePage}></Route>\n              <Route exact path='/resume' component={ResumePage}></Route>\n            </Switch>\n        </Router>\n        </div>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}